---
import type { CollectionEntry } from "astro:content";

import FormattedDate from "../components/FormattedDate.astro";
import Callout from "../components/Callout.astro";
import Tag from "../components/Tag.astro";

import MarkdownBlock from "../components/MarkdownBlock.astro";
import BaseLayout from "./BaseLayout.astro";

type Props = CollectionEntry<"posts">["data"];

const { title, description, emoji, pubDate, tags, originalPost, heroImage } =
  Astro.props;

// Extract hostname from original post
let showOP = false;
let hostname = "";
if (originalPost != undefined) {
  showOP = true;
  hostname = new URL(originalPost).hostname;
}
---

<BaseLayout title={title} description={description} emoji={emoji}>
  {
    heroImage != undefined ? (
      <div
        class="w-full h-64 bg-cover rounded-md mb-4"
        style={`background-image: url(${heroImage})`}
      />
    ) : (
      <h1 class="text-6xl lg:text-8xl p-5 px-0 rounded-md w-fit mb-4">
        {emoji}
      </h1>
    )
  }
  <h1 class="text-5xl lg:text-6xl font-bold mb-4 text-neutral-700">{title}</h1>
  <h2 class="text-md lg:text-lg font-bold text-neutral-500 mb-2">
    {description}
  </h2>
  <span class="text-md lg:text-lg italic text-neutral-500">
    Published on <FormattedDate date={pubDate} />
  </span>
  <ul class="flex gap-2 flex-wrap mt-4">
    {
      tags.map((tag) => (
        <li>
          <a href={`/tags/${tag}`}>
            <Tag name={`#${tag}`} />
          </a>
        </li>
      ))
    }
  </ul>

  <!-- Original Post -->
  {
    showOP && (
      <Callout color="bg-neutral-100" emoji="ðŸ‘€">
        <p class="text-md">
          Read the original post on{" "}
          <a class="underline text-neutral-700" href={originalPost}>
            {hostname}
          </a>{" "}
        </p>
      </Callout>
    )
  }

  <MarkdownBlock>
    <slot />
  </MarkdownBlock>
</BaseLayout>
