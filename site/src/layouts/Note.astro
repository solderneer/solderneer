---
import type { CollectionEntry } from "astro:content";

import FormattedDate from "../components/FormattedDate.astro";
import Callout from "../components/Callout.astro";
import Tag from "../components/Tag.astro";

import MarkdownBlock from "../components/MarkdownBlock.astro";
import BaseLayout from "./BaseLayout.astro";
import LinkGraph from "../components/LinkGraph.astro";

type Props = CollectionEntry<"notes">["data"];

const { title, description, emoji, pubDate, updatedDate, tags, originalPost, heroImage } = Astro.props;
const { pathname } = Astro.url;

// Extract hostname from original post
let showOP = false;
let hostname = "";
if (originalPost != undefined) {
  showOP = true;
  hostname = new URL(originalPost).hostname;
}
---

<BaseLayout title={title} emoji={emoji} description={description} image={heroImage}>
  {
    heroImage != undefined ? (
      <div
        class="w-full h-64 bg-cover rounded-md mb-4"
        style={`background-image: url(${heroImage})`}
      />
    ) : (
      <h1 class="text-6xl lg:text-8xl p-5 px-0 rounded-md w-fit mb-4">
        {emoji}
      </h1>
    )
  }

  <h1 id="title" class="text-4xl lg:text-5xl font-bold mb-2">
    {title}
  </h1>
  
  <div class="mt-4 mb-6">
      {
        description != undefined ? (
          <h2 id="description" class="text-xl text-text-color/80 mb-1">
            {description}
          </h2>
        ) : null
      }

      <div class="flex flex-wrap items-center gap-2 text-md text-text-color/80">
        <span class="italic">
          <FormattedDate date={pubDate} /> â€¢ Updated <FormattedDate
            date={updatedDate}
          />
        </span>
        <ul class="flex gap-2 flex-wrap">
          {
            tags.map((tag: string) => (
              <li>
                â€¢
                <a href={`/tags/${tag}`}>
                  <Tag name={`${tag}`} />
                </a>
              </li>
            ))
          }
        </ul>
      </div>
  </div>
  
  <!-- Original Post -->
  {
    showOP && (
      <Callout class="w-min" color="bg-neutral-100" emoji="ðŸ‘€">
        <p class="text-md">
          Read the original post on{" "}
          <a class="underline text-neutral-700" href={originalPost}>
            {hostname}
          </a>{" "}
        </p>
      </Callout>
    )
  }

  <MarkdownBlock>
    <slot /> 
    <LinkGraph rootPath={pathname.substring(1)} />
  </MarkdownBlock>
</BaseLayout>
