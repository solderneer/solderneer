---
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";
import NoteItemMinimal from "../../components/NoteItemMinimal.astro";

export async function getStaticPaths() {
  const allNotes = (await getCollection("notes")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  // List of dynamically generated tags
  const uniqueTags = [
    ...new Set(allNotes.map((note) => note.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredNotes = allNotes.filter((note) =>
      note.data.tags.includes(tag)
    );

    return {
      params: { slug: tag },
      props: { notes: filteredNotes },
    };
  });
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { slug } = Astro.params as Params;
const { notes } = Astro.props as Props;

const title = `Notes tagged ${slug}`;
const description = `All of Shan's notes tagged ${slug}.`;

---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <h1 class="text-5xl lg:text-6xl font-bold">{slug}</h1>
  <h2 class="text-md lg:text-lg font-bold text-text-color/80 mt-4 mb-10">
    All of Shan's notes tagged with {slug}.
  </h2>

  <ul class="flex flex-col gap-4">
    {
      notes.map((note) => (
        <li>
          <NoteItemMinimal slug={note.slug} note={note} />
        </li>
      ))
    }
  </ul>
</BaseLayout>
